name: ComplianceSendModule
author: PrestaShopCorp
description: Scan a module with API Compliance.
inputs:
  repository_name:
    description: 'GitHub repository'
    required: true
  branch_name:
    description: ''
    required: true
  token_uri:
    description: ''
    required: true
  cookie: 
    description: ''
    required: true
  client_id: 
    description: ''
    required: true
  client_secret:
    description: ''
    required: true
  grant_type: 
    description: ''
    required: true
  audience: 
    description: ''
    required: true
  scope: 
    description: ''
    required: true
  compliance_base_uri:
    description: ''
    required: true
  pat:
    description: 'Github PAT'
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
    - name: Zip Folder
      shell: bash
      run: |
        cd ..
        zip -r -q module.zip ${{ inputs.repository_name }} -x module.zip && exit 0
    - name: Get OAUTH token from oauth.prestashop.com
      uses: ./actions/auth-compliance
      id: get_oauth_token
      with:
        token_uri: ${{ inputs.token_uri }}
        cookie: ${{ inputs.cookie }}
        client_id: ${{ inputs.client_id }}
        client_secret: ${{ inputs.client_secret }}
        grant_type: ${{ inputs.grant_type }}
        audience: ${{ inputs.audience }}
        scope: ${{ inputs.scope }}
    - name: "Send zip to orchestrator"
      id: send_zip
      shell: bash
      run: |
        curl --location --request POST "${{ inputs.compliance_base_uri }}/orchestrator/v1/scan" \
            --header "Connection: keep-alive" \
            --header "Content-Type: multipart/form-data" \
            --oauth2-bearer ${{ steps.get_oauth_token.outputs.TOKEN }} \
            --form 'module=@./../module.zip' \
            --form 'callback[method]="post"' \
            --form 'callback[uri]="https://api.github.com/repos/PrestaShopSellerExtensions/${{ inputs.repository_name }}/actions/workflows/compliance-get-report.yml/dispatches"' \
            --form 'callback[payload][ref]=${{ inputs.branch_name }}' \
            --form 'callback[headers][0][0]="Accept"' \
            --form 'callback[headers][0][1]="application/vnd.github+json"' \
            --form 'callback[headers][1][0]="X-GitHub-Api-Version"' \
            --form 'callback[headers][1][1]="2022-11-28"' \
            --form 'callback[headers][2][0]="Authorization"' \
            --form 'callback[headers][2][1]="Bearer ${{ inputs.pat }}"' \
            --output scan.json && exit 0
        jq --color-output . scan.json | less -R && exit 0
